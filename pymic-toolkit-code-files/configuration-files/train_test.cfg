[dataset]

# tensor type (float or double)
tensor_type = float

root_dir  = /content/drive/MyDrive/Colab Notebooks/HeadNeck_GTV/dataroot/origindata/preprocess
train_csv = /content/drive/MyDrive/Colab Notebooks/HeadNeck_GTV/examples/miccai/config/image_train.csv
valid_csv = /content/drive/MyDrive/Colab Notebooks/HeadNeck_GTV/examples/miccai/config/image_train.csv
test_csv  = /content/drive/MyDrive/Colab Notebooks/HeadNeck_GTV/examples/miccai/config/image_train.csv

# modality number
modal_num = 1

# data transforms
#train_transform =  [Rescale,LabelConvert, LabelToProbability,Pad]
#test_transform  = [Pad]
train_transform = [ChannelWiseNormalize, RandomFlip,  RandomCrop, LabelToProbability]
test_transform  = [ChannelWiseNormalize, Pad]


ChannelWiseNormalize_mean = None
ChannelWiseNormalize_std  = None
ChannelWiseNormalize_channels = [0]
ChannelWiseNormalize_zero_to_random = False
ChannelWiseNormalize_inverse = False

RandomFlip_flip_depth  = False
RandomFlip_flip_height = True
RandomFlip_flip_width  = True
RandomFlip_inverse     = False

RandomCrop_output_size = [48, 48, 48]
RandomCrop_foreground_focus = True
RandomCrop_foreground_ratio = 0.5
Randomcrop_mask_label       = [1]
RandomCrop_inverse     = False

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

Pad_output_size = [8, 8, 8]
Pad_ceil_mode   = True
Pad_inverse     = True

# =====================================================

[network]
# this section gives parameters for network

# type of network
net_type = UNet2D
# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
feature_chns  = [16, 24, 32, 48]
dropout       = [0.0, 0.0, 0.2, 0.3]
trilinear     = True
#conv_dims = [2, 2, 3, 3, 3],

[training]
# device name" cuda:n or cpu
device_name = cuda:0
batch_size    = 4
loss_type     = NoiseRobustDiceLoss
NoiseRobustDiceLoss_gamma=1.5
noiserobustdiceloss_enable_pixel_weight = False
noiserobustdiceloss_enable_class_weight = False
# for optimizers
optimizer     = Adam
learning_rate = 1e-4
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (MultiStepLR)
lr_gamma      = 0.5
lr_milestones = [10000]

summary_dir  = /content/drive/MyDrive/Colab Notebooks/HeadNeck_GTV/model/unet3d
checkpoint_prefix = /content/drive/MyDrive/Colab Notebooks/HeadNeck_GTV/model/unet3d

# start iter
iter_start = 0
iter_max   = 9000
iter_valid = 100
iter_save  = 3000
